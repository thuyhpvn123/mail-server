{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "chunkIndex",
						"type": "uint256"
					}
				],
				"name": "ChunkUploaded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "contentLen",
						"type": "uint64"
					}
				],
				"name": "FileAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"name": "FileDeleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"name": "FileLocked",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"name": "deleteFile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "downloadFile",
				"outputs": [
					{
						"internalType": "bytes[]",
						"name": "",
						"type": "bytes[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"name": "getFileInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "hash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "contentLen",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "totalChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "expireTime",
								"type": "uint64"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ext",
								"type": "string"
							},
							{
								"internalType": "enum FileStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contentDisposition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentID",
								"type": "string"
							}
						],
						"internalType": "struct Info",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string[]",
						"name": "names",
						"type": "string[]"
					}
				],
				"name": "getFileKeyFromName",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"name": "getFileProgress",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "lastChunkHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "processedChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "processedLength",
								"type": "uint64"
							}
						],
						"internalType": "struct FileProgress",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "fileKeys",
						"type": "bytes32[]"
					}
				],
				"name": "getFilesInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "hash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "contentLen",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "totalChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "expireTime",
								"type": "uint64"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ext",
								"type": "string"
							},
							{
								"internalType": "enum FileStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contentDisposition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentID",
								"type": "string"
							}
						],
						"internalType": "struct Info[]",
						"name": "infos",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"name": "lockFile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "mKeyToFileInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "hash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "contentLen",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "totalChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "expireTime",
								"type": "uint64"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ext",
								"type": "string"
							},
							{
								"internalType": "enum FileStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contentDisposition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentID",
								"type": "string"
							}
						],
						"internalType": "struct Info",
						"name": "info",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "lastChunkHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "processedChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "processedLength",
								"type": "uint64"
							}
						],
						"internalType": "struct FileProgress",
						"name": "progress",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "mNameToFileKey",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "hash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "contentLen",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "totalChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "expireTime",
								"type": "uint64"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ext",
								"type": "string"
							},
							{
								"internalType": "enum FileStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contentDisposition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentID",
								"type": "string"
							}
						],
						"internalType": "struct Info",
						"name": "info",
						"type": "tuple"
					}
				],
				"name": "pushFileInfo",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "hash",
								"type": "bytes32"
							},
							{
								"internalType": "uint64",
								"name": "contentLen",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "totalChunks",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "expireTime",
								"type": "uint64"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ext",
								"type": "string"
							},
							{
								"internalType": "enum FileStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contentDisposition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contentID",
								"type": "string"
							}
						],
						"internalType": "struct Info[]",
						"name": "infos",
						"type": "tuple[]"
					}
				],
				"name": "pushFileInfos",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					},
					{
						"internalType": "uint64",
						"name": "_newExpireTime",
						"type": "uint64"
					}
				],
				"name": "renewTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "service",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_service",
						"type": "address"
					}
				],
				"name": "setService",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "chunkData",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "chunkHash",
						"type": "bytes32"
					}
				],
				"name": "uploadChunk",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "fileKey",
						"type": "bytes32"
					},
					{
						"internalType": "bytes[]",
						"name": "chunkDatas",
						"type": "bytes[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "chunkHashes",
						"type": "bytes32[]"
					}
				],
				"name": "uploadChunks",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/file.sol": "Files"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 0
		},
		"remappings": []
	},
	"sources": {
		"src/file.sol": {
			"keccak256": "0x155109496867fc495db4b722fff8619336edbbd29003d2c5dc6e38d70b98ceec",
			"license": "MIT",
			"urls": [
				"bzz-raw://c533c1e0741b6680ead4ec4e5b95d355b83c75c904aa92d18322330f6893db3c",
				"dweb:/ipfs/QmPe6XwTiuw84iyix41HBxtY3LyiJ82rFz2Uxi3EpqUP4S"
			]
		},
		"src/interfaces/IEmailStorage.sol": {
			"keccak256": "0x5ed51698f7c916c2aef99b1d12dd03b1dcaf73360b62bdcc49f313d92e6920fb",
			"license": "MIT",
			"urls": [
				"bzz-raw://249b07fe20d0915c8a24210b17de38cdcf7d74ec13f160d2ff3218dcadb58de3",
				"dweb:/ipfs/QmSJJi4sU7apGjSppb1hoALC887XvWvBNQjs3nerbydEKt"
			]
		}
	},
	"version": 1
}