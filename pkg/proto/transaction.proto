syntax = "proto3";
package transaction;
option go_package = "/proto";
option java_package = "com.meta_node.protos.compiled.transaction";

enum ACTION {
  EMPTY = 0;
  STAKE = 1;
  UNSTAKE = 2;
  DEPLOY_SMART_CONTRACT = 3;
  CALL_SMART_CONTRACT = 4;
  REWARD = 5;
  PUNISH = 6;
  MINE = 7; 
  OPEN_CHANNEL = 8;
  JOIN_CHANNEL = 9;
  COMMIT_ACCOUNT_STATE_CHANNEL = 10;
  COMMIT_CHANNEL = 11;
  UPDATE_STORAGE_HOST = 12;
}

enum FEE_TYPE {
  USER_CHARGE_FEE = 0;
  SMART_CONTRACT_CHARGE_FEE = 1;
}  

message Transaction {
  bytes LastHash = 1;
  bytes PublicKey = 2; // public key of sender
  bytes ToAddress = 3; 
  bytes PendingUse = 4; 
  bytes Amount = 5; //
  uint64 MaxGas = 6;
  uint64 MaxGasPrice = 7; 
  uint64 MaxTimeUse = 8; // millisecond
  // ACTION Action = 9;
  bytes Data = 10; // 
  repeated bytes RelatedAddresses = 11;
  bytes LastDeviceKey = 12; // hash last transaction deviceKey
  bytes NewDeviceKey = 13; // hash of hash for new deviceKey
  bytes Sign = 14; //
  bytes CommissionSign = 15; // sign of contract creator
  bytes Nonce = 16;
  bytes FromAddress = 17;
  bool ReadOnly = 18; // Thêm trường chỉ đọc

  // Các trường bổ sung

  uint64 ChainID = 19;
  uint64 Type = 20;
  bytes R = 21;
  bytes S = 22;
  bytes V = 23;

}

message TransactionHashData {
  bytes LastHash = 1;
  bytes ToAddress = 2;
  bytes PendingUse = 3;  
  bytes Amount = 4; 
  uint64 MaxGas = 5;
  uint64 MaxGasPrice = 6;
  uint64 MaxTimeUse = 7; 
 // ACTION Action = 8;
  bytes Data = 9; 
  repeated bytes RelatedAddresses = 10;
  bytes LastDeviceKey = 11; // hash last transaction deviceKey
  bytes NewDeviceKey = 12; // hash of hash for new deviceKey
  bytes Nonce = 13;
  bytes FromAddress = 14; 
}

message DeployData {
  bytes Code = 1;
  // string StorageHost = 2; // DEPRECATED
  bytes StorageAddress = 3;
}

message CallData {
  bytes Input = 1;
}

message OpenStateChannelData {
  repeated bytes ValidatorAddresses = 1;
}

message UpdateStorageHostData {
  string StorageHost = 1;
  bytes StorageAddress = 2;
}

message MassTransferData {
  map<string,bytes> MapAddressAmount = 1;
}

message Transactions {
  repeated Transaction Transactions = 1;
}

message VerifyTransactionSignRequest {
  bytes Hash = 1; 
  bytes Pubkey = 2; 
  bytes Sign = 3;
}

message VerifyTransactionSignResult {
  bytes Hash = 1; 
  bool Valid = 2; 
}

message TransactionError {
  int64 Code = 1;
  string Description = 2;
}

message TransactionHashWithErrorCode {
  bytes TransactionHash = 1;
  int64 Code = 2;
}

message TransactionWithDeviceKey {
  Transaction Transaction = 1;
  bytes DeviceKey = 2;
}

message TransactionsWithBlockNumber {
  repeated Transaction Transactions = 1;
  uint64 BlockNumber = 2; 
}

message ExecuteSCTransactions {
  repeated Transaction Transactions = 1;
  uint64 GroupId = 2; 
  uint64 BlockNumber = 3; 
}

message FromNodeTransactionsResult {
  repeated bytes ValidTransactionHashes = 1;
  repeated TransactionHashWithErrorCode TransactionErrors = 2;
  uint64 BlockNumber = 3;
}

message ToNodeTransactionsResult {
  repeated bytes ValidTransactionHashes = 1;
  uint64 BlockNumber = 3;
}

message TransactionsFromLeader {
  repeated Transaction Transactions = 1;
  bytes AggSign = 2;
  uint64 BlockNumber = 3;
  uint64 TimeStamp = 4;
}
